{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1QwhgRtDNjDTDMnfyTI5P7XDYGDPSzcnT","timestamp":1663311614709}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["*Теоретический материал данного урока по большей части основан на [учебнике по машинному обучению ШАД](https://ml-handbook.ru), [документации scikit-learn](https://scikit-learn.org/stable/user_guide.html), и [статьях Kaggle](https://www.kaggle.com/alexisbcook/cross-validation)*."],"metadata":{"id":"mzB6lXh7ZEZm"}},{"cell_type":"markdown","source":["# Линейные модели"],"metadata":{"id":"8fjkY-H11-5P"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"U1_v7RLj18H9"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from typing import Tuple\n","\n","# Для воспроизводимости\n","np.random.seed(50)\n","\n","# Для графиков\n","sns.set_style('darkgrid', {'axes.facecolor': '.9'})"]},{"cell_type":"markdown","source":["## Основы обучения с учителем"],"metadata":{"id":"x6h7cpwy2Le2"}},{"cell_type":"markdown","source":["Первоначально вспомним суть обучения с учителем:\n","\n","<img src=\"http://drive.google.com/uc?export=view&id=1P_KpzPB0eq_wLgL1ecFNCKI3Xxed3ja9\" width=480 height=360>\n","\n","Таким образом, модель МО можно интерпретировать как функцию $f$, которая преобразует значения признаков $x$ в предсказываемое значение $y_{pred}$:\n","\n","$$ y_{pred} = f(x),$$\n","\n","где:\n","\n","- $x = (x_1, x_2, ..., x_D), x \\in \\mathbb{R}^{D}$ — вектор, который содержит $D$ признаков;\n","- $y_{pred}$ — целевое значение, которое нужно предсказывать;\n","- $f$ — модель машинного обучения. \n","\n","Для разных задач:\n","- $y_{pred} \\in \\mathbb{R}$ — регрессия;\n","- $y_{pred} = \\{0, 1\\}$ — бинарная классификация;\n","- $y_{pred} = \\{1, 2, ..., K\\}$ — многоклассовая классификация;\n","- $y_{pred} = \\{0, 1\\}^K$ — многоклассовая классификация с пересекающимися классами;"],"metadata":{"id":"o5r1bM_k31Qq"}},{"cell_type":"markdown","source":["## Определение"],"metadata":{"id":"rBKaGZq-401X"}},{"cell_type":"markdown","source":["Допустим, у нас есть данные $(X, y)$, которые содержат $N$ примеров. Каждый $i$ пример состоит из вектора признаков $x_i$ и целевого значения $y_i$. Таким образом, мы хотим, чтобы наша модель могла посчитать $y_i$, зная $x_i$, с минимальной ошибкой. \n","\n","Например, мы хотим посчитать цену кофейного напитка ($y_i$), используя информацию об его ингредиентах ($x_i$):\n","\n","| напиток (примеры) |объем воды ($x_1$)|количество кофе ($x_2$)|... | количество молока ($x_D$)| цена ($y$)|\n","|---|---|---|---|---|---|\n","| латте (пример $1$) | 50 г | 18 г |  ... | 250 г | 2.45\\$ |\n","| американо (пример $2$)| 100 г | 20 г | ... | 0 г |1.10\\$ |\n","| ... | ... | ... | ... | ... | ... |\n","| капучино (пример $N$) | 40 г | 150 г| ... | 18 г | 2.37 |\n","\n","Обратите внимание на обозначения величин:\n","\n","- $N$ — количество примеров в датасете\n","- $D$ — количество признаков\n","- $i$ — номер примера\n","- $X$ — матрица признаков размером $(N, D)$\n","- $y$ — вектор размера $(N)$ с целевыми значениями"],"metadata":{"id":"xL5GcqAx45Ay"}},{"cell_type":"markdown","source":["Есть много моделей, которые способны решить данную задачу. Мы начнем с самой простой — с линейной модели.\n","\n","<img src=\"http://drive.google.com/uc?export=view&id=1tXDf9CCZhXwv6q8IiNVrvC601R1pxVD3\" width=480 height=360>\n","\n","Используя данную модель, мы предполагаем, что целевое значение (цена кофе из примера выше) линейно зависит от признаков (количество ингредиентов). Таким образом, можно сформулировать следующее математическое выражение:\n","\n","$$\\begin{split}\n","y_i \n","&= w_0 + w_1 x_{i1} + w_2 x_{i2} + ... + w_D x_{iD} \\\\\n","&= w_0 + \\sum_{j=1}^D w_j x_{ij} \\\\\n","&= w_0 + \\langle w, x_i \\rangle\n","\\end{split}$$\n","\n","где:\n","\n","- $w_0$ — свободный коэффициент;\n","- $w \\in \\mathbb{R}^{D}$ — вектор весов."],"metadata":{"id":"N6w8xU8i59g_"}},{"cell_type":"markdown","source":["Для упрощения можно выполнить следующие преобразования:\n","\n","$$\\begin{split}\n","y_i \n","&= w_0 + w_1 x_{i1} + w_2 x_{i2} + ... + w_D x_{iD} \\\\\n","&= w_0 + \\begin{pmatrix} x_{i1} & x_{i2} & ... & x_{iD} \\end{pmatrix}\n","          \\begin{pmatrix} w_1 \\\\ w_2 \\\\ ... \\\\ w_D \\end{pmatrix}\n","= \\begin{pmatrix} 1 & x_{i1} & x_{i2} & ... & x_{iD} \\end{pmatrix}\n","    \\begin{pmatrix} w_0 \\\\ w_1 \\\\ w_2 \\\\ ... \\\\ w_D \\end{pmatrix} \\\\  \n","&= \\langle w, x_i \\rangle\n","\\end{split}$$\n","\n","- $w \\in \\mathbb{R}^{D+1}$ — вектор весов.\n","- $x_i \\in \\mathbb{R}^{D+1}$ — вектор признаков $i$-го примера.\n","\n","Данное описание будет использоваться в дальнейших примерах."],"metadata":{"id":"0CwLH7y47PM3"}},{"cell_type":"markdown","source":["## Постановка задачи обучения"],"metadata":{"id":"ilrE1zvr7jMz"}},{"cell_type":"markdown","source":["В линейной модели целевое значение -- это взвешенная сумма признаков. Таким образом, целью обучения является найти такие веса, чтобы разница между правильными и предсказанными значениями была минимальная для всех примеров из обучающей выборки.\n","\n","Если отобразить это в двумерном пространстве:\n","\n","<img src=\"http://drive.google.com/uc?export=view&id=17POECYZ4YYDsQTi5aBdGL-X0Jzx1bJJn\" width=400 height=360>"],"metadata":{"id":"jHL__A-X7qh0"}},{"cell_type":"markdown","source":["Чтобы минимизировать ошибку прогноза, необходимо определить функцию, которую мы будем использовать для расчета этой ошибки. Эта функция называется **функцией потерь** или **loss function** $L$.\n","\n","Для задачи регрессии в качестве функции потерь используется средняя квадратическая ошибка (MSE):\n","\n","$$\\begin{split}\n","L(f, X, y) = MSE(f, X, y)\n","&= \\frac {1}{N} \\| y - f(X)\\|_2^2 \\\\\n","&= \\frac {1}{N} \\| y - \\langle x, w \\rangle \\|_2^2 \\\\\n","&= \\frac {1}{N} \\sum_{i=1}^N (y_i - \\langle x_i, w \\rangle)^2 \\\\\n","\\end{split}$$\n"],"metadata":{"id":"6fVoEjaY8hRZ"}},{"cell_type":"markdown","source":["Таким образом, чтобы построить линейную модель нужно найти такие веса $w$, чтобы функция потерь была минимальна:\n","\n","$$\\begin{array}{rcl}\n","\\| y - f(X)\\|_2^2 \\rightarrow \\min\\limits_{w}\n","\\end{array}$$ \n","\n","Данная задача может быть решена аналитически точно или приблизительно. Аналитический подход использует обратные матрицы и имеет следующие недостатки:\n","- это вычислительно сложно (основная проблема работы с обратными матрицами)\n","- если есть хотя бы небольшая взаимосвязь между признаками, решение становится нестабильным\n","\n","Из-за данных недостатоков аналитического решения на практике чаще используются подходы приблизительного определения вектора весов $w$."],"metadata":{"id":"De1yu7PA9IT8"}},{"cell_type":"markdown","source":["## Градиентный спуск"],"metadata":{"id":"lCntmLciC3z8"}},{"cell_type":"markdown","source":["Функция потерь, которую мы используем для линейной модели, гладкая и выпуклая (вспомните график параболы). Поэтому можно использовать градиентный спуск для определения минимума этой функции.\n","\n","Как известно, градиент функции в точке направлен в сторону её наискорейшего роста, а антиградиент (противоположный градиенту вектор) в сторону наискорейшего убывания. То есть имея какое-то приближение оптимального значения параметра $w$, мы можем его улучшить, посчитав градиент функции потерь в точке и немного сдвинув вектор весов в направлении антиградиента:\n","\n","<img src=\"http://drive.google.com/uc?export=view&id=11KJOdviSMwUiH8GoFbhRHs5sC4Qs6IOr\" width=440 height=360>\n","\n","Можно записать это следующим образом:\n","\n","$$\\begin{array}{rcl}\n","w_{j+1} = w_{j} - \\alpha \\frac{d}{dw_j}L(f_w, X, y)\n","\\end{array}$$ \n","\n","где:\n","- $j$ — шаг итерации\n","- $\\alpha$ — темп обучения\n","\n","Для рассматриваемой функции потерь мы можем рассчитать градиент следующим образом:\n","\n","$$ \\nabla_w L = \\frac{2}{N} X^T (Xw - y)$$"],"metadata":{"id":"ShDBvEUPC5r3"}},{"cell_type":"markdown","source":["Посмотрим, как это работает на игрушечном примере. Допустим, у нас есть линейная модель:\n","\n","$$f(x) = 4 + 5x_1$$"],"metadata":{"id":"u9O_YfjcGmgo"}},{"cell_type":"markdown","source":["Сгенерируем данные, чтобы постараться построить ту же модель, используя только данные."],"metadata":{"id":"-WK3Td5NG2Ni"}},{"cell_type":"code","source":["def generate_data(num_samples: int) -> Tuple[np.ndarray, np.ndarray]:\n","    \"\"\"Generate dummy data for the toy example.\"\"\"\n","    \n","    # Создаем вектор признаков только с одним значением\n","    x = np.random.uniform(low=0, high=1, size=num_samples)\n","    \n","    # Добавляем шум\n","    random_noise = np.random.uniform(\n","        low=-0.5, high=0.5, size=num_samples)\n","    \n","    # Определяем целевое значение\n","    y = 4 + 5*x + random_noise\n","    return x, y"],"metadata":{"id":"xvhOc2pF2AMh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Создаем искусственные данные\n","x, y = generate_data(200)"],"metadata":{"id":"xltBLrXUHKjl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Визуализируем\n","data = np.vstack([x,  y]).T\n","data = pd.DataFrame(data, columns=['x1', 'y'])\n","data.plot.scatter(x='x1', y='y', title='Сгенерированные данные');"],"metadata":{"id":"PB-N1MQMHPd4","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1663311784913,"user_tz":-420,"elapsed":785,"user":{"displayName":"Mikhail Chernobrov","userId":"00656209317254757514"}},"outputId":"e2826032-ddda-4550-91be-7dae204619b2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Таким образом, у нас есть датасет, который содержит 200 примеров \"признаки—таргет\". Представим, что мы не знаем, как выглядит настоящая модель (которую сами задали ранее). Наша задача построить модель используя только данные. \n","\n","По графику мы видим, что зависимость между таргетом и признаком — линейная. Поэтому мы можем построить модель линейной регрессии.\n","\n","$$f(x) = w_0 + w_1 x_1 = \\langle w, x_i \\rangle $$ \n","\n","- $w \\in \\mathbb{R}^{D+1}$ — вектор весов.\n","- $x_i \\in \\mathbb{R}^{D+1}$ — вектор признаков $i$-го примера.\n","\n","Первый шаг — создать начальную точку, т. е. исходные веса."],"metadata":{"id":"mXc_IUirHWoo"}},{"cell_type":"code","source":["# Создаем исходные веса\n","w = np.random.uniform(size=2)\n","print(w)"],"metadata":{"id":"YOBjke0uHSBi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663311793384,"user_tz":-420,"elapsed":305,"user":{"displayName":"Mikhail Chernobrov","userId":"00656209317254757514"}},"outputId":"509e72c7-f802-4244-d335-526d7504f268"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.26278352 0.92781991]\n"]}]},{"cell_type":"markdown","source":["#### TODO: Прямое распространение"],"metadata":{"id":"BCabnnyffZ06"}},{"cell_type":"markdown","source":["Далее создаем функцию, которая будет определять выход модели в соответствии с заданным входом. Этот шаг называется прямым распространением, прямым проходорм, forward pass или forward propagation."],"metadata":{"id":"mNwpJf_-JBQB"}},{"cell_type":"code","source":["def forward_pass(features: np.ndarray, \n","                 weights: np.ndarray) -> np.ndarray:\n","    \"\"\"Compute the forward pass of the linear model.\n","    \n","    features — a feature values of many samples, so its size is num_samples.\n","    weights — the vector of weights with size of 2.\n","    output – a vector of predicted values for many samples, its size is num_samples.\n","    \"\"\"\n","    \n","    # Посмотрите формулу линейной регрессии\n","    # Нужно добавить 1 к вектору признаков\n","    ones = np.ones(features.shape[0])\n","    features_vector = np.vstack((ones, features)).T\n","    \n","    # Выполните расчет\n","    output = np.dot(features_vector, weights)\n","    return output"],"metadata":{"id":"sT3Yx2wKI-78"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Проверяем результат с первыми двумя примерами\n","y_pred_two_samples = forward_pass(x[:2], w)\n","print(y_pred_two_samples)"],"metadata":{"id":"lyZ0HfvRJVmt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663313999555,"user_tz":-420,"elapsed":261,"user":{"displayName":"Mikhail Chernobrov","userId":"00656209317254757514"}},"outputId":"1efc65e2-6420-4006-c948-7474904f6830"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.72168478 0.47440357]\n"]}]},{"cell_type":"code","source":["# Берем первое значение\n","x_1 = x[0]\n","y_pred_1 = w[0] + x_1 * w[1]\n","\n","# Берем второе значение\n","x_2 = x[1]\n","y_pred_2 = w[0] + x_2 * w[1]\n","\n","# Значения должны совпадать с предыдущими\n","print(y_pred_1, y_pred_2)"],"metadata":{"id":"yxCeZf8jJpF0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663314002952,"user_tz":-420,"elapsed":266,"user":{"displayName":"Mikhail Chernobrov","userId":"00656209317254757514"}},"outputId":"e3651aae-3fda-464f-c62b-568a5a4faa2a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.7216847780673644 0.47440356795671956\n"]}]},{"cell_type":"markdown","source":["#### TODO: Обратное распространение"],"metadata":{"id":"ks1iDWhyfrTN"}},{"cell_type":"markdown","source":["Далее необходимо реализовать функцию для расчета градиента и обновления весов. Этот шаг называется обратным проходом, обратным распространением ошибки, backward pass или backpropagation.\n","\n","Вспоминаем формулу:\n","\n","$$\\begin{array}{rcl}\n","w_{j+1} = w_{j} - \\alpha \\frac{d}{dw}L(f_w, X, y)\n","\\end{array}$$ \n","\n","$$ \\nabla_w L = \\frac{2}{N} X^T (Xw - y)$$\n","\n","где:\n","- $j$ — шаг оптимизации\n","- $\\alpha$ — темп обучения"],"metadata":{"id":"1vaa7HTbJ0Bx"}},{"cell_type":"code","source":["def backward_pass(features: np.ndarray, \n","                  outputs_true: np.ndarray,\n","                  weights: np.ndarray, \n","                  outputs_pred: np.ndarray,\n","                  learning_rate: float) -> np.ndarray:\n","    \"\"\"Compute the gradient and create new weights.\n","    \n","    features — a feature values across many samples, so its size is num_samples.\n","    weights — the vector of weights with size of 2.\n","    output_true – a vector of true output values for many samples (from training dataset), \n","                  its size is num_samples.\n","    output_pred – a vector of output values prdicted by the model, its size is num_samples.\n","    learning_rate – a value that control the size of each optimization step.\n","    \"\"\"\n","    # Определяем количество примеров\n","    num_samples = features.shape[0]\n","    \n","    # Определяем ошибку\n","    error = outputs_pred - outputs_true\n","    \n","    # Подготавливаем вектор признаков\n","    ones = np.ones(num_samples)\n","    features_vector = np.vstack((ones, features)).T\n","    \n","    # Определяем градиент\n","    gradient = (2 / num_samples) * np.dot(features_vector.T, error)\n","    \n","    # Обновляем веса\n","    new_weights = weights - learning_rate * gradient\n","    return new_weights"],"metadata":{"id":"89l4vhjhJysV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Посчитаем предсказания для всех примеров\n","y_pred = forward_pass(x, w)\n","\n","# Определяем обновленные веса\n","new_weights = backward_pass(x, y, w, y_pred, \n","                            learning_rate=0.2)\n","new_weights"],"metadata":{"id":"5JDEjB-iKSWH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663314130999,"user_tz":-420,"elapsed":7,"user":{"displayName":"Mikhail Chernobrov","userId":"00656209317254757514"}},"outputId":"b591de82-a04e-4ce3-d21f-bb63498353fe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2.56869936, 2.21348703])"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["#### TODO: Градиентный спуск"],"metadata":{"id":"SgX1SLiifvTL"}},{"cell_type":"markdown","source":["Это была только одна итерации в процессе обучения. Создадим функцию, которая будет делать несколько шагов, т. е. обучать модель."],"metadata":{"id":"P2QH9bjJKccs"}},{"cell_type":"code","source":["def fit_linear_model_gd(features: np.ndarray, \n","                        output_true: np.ndarray,\n","                        num_iter: int, \n","                        learning_rate: float, \n","                        random_seed: int = 50) -> list:\n","    \"\"\"Train linear regression model with the gradient descent.\n","    \n","    features — a feature values of many samples, so its size is num_samples.\n","    output_true – a vector of true output values for many samples (from training dataset), \n","                  its size is num_samples.\n","    num_iter: number of optimization iterations.\n","    learning_rate: a value that control the size of each optimization step.\n","    random_seed: value to create random generator.\n","    \"\"\"\n","\n","    # Для воспроизводимости экспериментов\n","    np.random.seed(random_seed)\n","    \n","    # Создаем случайные веса\n","    w = np.random.uniform(size=2)\n","\n","    # Сохраняем историю изменения весов\n","    weights_history = []\n","    \n","    # Начинаем оптимизацию\n","    for iteration in range(num_iter):\n","        \n","        # Сохраняем веса для истории\n","        weights_history.append(w)\n","        \n","        # Определяем предсказания\n","        y_pred = forward_pass(features=features, \n","                              weights=w)\n","        \n","        # Обновляем веса\n","        w = backward_pass(features=features, \n","                          outputs_true=output_true, \n","                          weights=w, \n","                          outputs_pred=y_pred, \n","                          learning_rate=learning_rate)\n","    return weights_history"],"metadata":{"id":"IbXjZiNHKaGV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Определяем темп обучения и количество итераций\n","learning_rate = 0.2\n","num_iter = 150\n","\n","# Выполним вычисления\n","weights_history = fit_linear_model_gd(x, y, num_iter, learning_rate)"],"metadata":{"id":"W1tf0_hiK5gO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Построим график на отдельных итерациях\n","num_plots = 6\n","fig, axes = plt.subplots(nrows=2, ncols=3, figsize=(15, 10))\n","\n","# Выбираем итерации\n","weights_samples = np.linspace(0, len(weights_history)-1, \n","                              num_plots, dtype='int')\n","\n","for index, ax in enumerate(axes.flat):\n","    \n","    # Подписи\n","    opt_iter = weights_samples[index]\n","    ax.set(xlabel='x1', ylabel='y', \n","           title=f'iteration {opt_iter}')\n","    \n","    # Отображаем данные\n","    ax.scatter(x, y)\n","    \n","    # Добавляем модель\n","    y_pred = forward_pass(x, weights_history[opt_iter])\n","    ax.scatter(x, y_pred)"],"metadata":{"id":"_MooRCVQK-gl","colab":{"base_uri":"https://localhost:8080/","height":621},"executionInfo":{"status":"ok","timestamp":1663314144325,"user_tz":-420,"elapsed":2696,"user":{"displayName":"Mikhail Chernobrov","userId":"00656209317254757514"}},"outputId":"bebe072c-7691-4557-d118-a49103fe1de2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x720 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["График сравнивает предсказанные значения с правильными. В начале модель делала предсказания с большой ошибкой, но в ходе обучения ошибка становилась все меньше."],"metadata":{"id":"Ldo6DQYhLUdw"}},{"cell_type":"code","source":["# Возьмем веса итоговой модели и сравним с правильной\n","w0, w1 = weights_history[-1]\n","print(f'True model: f(x) = 4 + 5*x1')\n","print(f'Built model: f(x) = {w0} + {w1}*x1')"],"metadata":{"id":"tJFoMvYXLQPt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663314149401,"user_tz":-420,"elapsed":290,"user":{"displayName":"Mikhail Chernobrov","userId":"00656209317254757514"}},"outputId":"fa5e7fe7-1b26-4d94-808f-850f94981831"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True model: f(x) = 4 + 5*x1\n","Built model: f(x) = 4.054102716266416 + 4.882632934535013*x1\n"]}]},{"cell_type":"markdown","source":["Как видно, они практически одинаковые. Вы можете поэксперементировать с разными темпами обучения и количеством итераций для достижения лучшего результата.\n","\n","Важно отметить, что веса в модели это обучаемые параметры. Однако, темп обучения и количество итерация это не обучаемые параметры, которые мы определяем до начала обучения. Чтобы избежать путаницы между обучаемыми и необучаемыми параметрами, используют термины **параметры** и **гиперпараметры**:\n","- веса — параметры\n","- темп обучения и количество итераций — гиперпараметры."],"metadata":{"id":"EkJDTD90Lp9J"}},{"cell_type":"markdown","source":["## Стохастический градиентный спуск"],"metadata":{"id":"L5mWHoMYMf6z"}},{"cell_type":"markdown","source":["На каждом шаге градиентного спуска нам требуется выполнить потенциально дорогую операцию вычисления градиента по всей выборке. Возникает идея заменить градиент его оценкой на подвыборке (в английской литературе такую подвыборку обычно именуют batch или mini-batch; в русской разговорной терминологии тоже часто встречается слово батч или мини-батч).\n","\n","Процесс обучения остается тем же самым. Однако перед началом обучения датасет разбивается на батчи опредленного размера (это гиперпараметр) и веса обновляются после каждого батча, а не для всей выборки сразу. Очень важно перемешивать выборку перед делением на батчи.\n","\n","Когда мы используем градиентый спуск с батчами, мы проходим через все примеры нашего датасета в несколько шагов. Поэтому в данном случае используют термин **эпоха** обучения вместо числа итераций (т. к. одна эпоха соответствует нескольким итерациям)."],"metadata":{"id":"mFQfyeA6MbAA"}},{"cell_type":"markdown","source":["Давайте реализуем обучения с батчами:"],"metadata":{"id":"rpcbCndsN4vg"}},{"cell_type":"markdown","source":["#### TODO: Градиентный спуск с батчами"],"metadata":{"id":"LotKcqpMgDMX"}},{"cell_type":"code","source":["from pandas.core.algorithms import factorize_array\n","def fit_linear_model_bgd(features: np.ndarray, \n","                         output_true: np.ndarray,\n","                         num_epoch: int, \n","                         learning_rate: float, \n","                         batch_size: int,\n","                         random_seed: int = 50) -> list:\n","    \"\"\"Train linear regression model with the mini-batch gradient descent.\n","    \n","    features — a feature values of many samples, so its size is num_samples.\n","    output_true – a vector of true output values for many samples (from training dataset), \n","                  its size is num_samples.\n","    num_epoch: number of epochs.\n","    learning_rate: a value that control the size of each optimization step.\n","    batch_size: size of each batch.\n","    random_seed: value to create random generator.\n","    \"\"\"\n","\n","    # Для воспроизводимости экспериментов\n","    np.random.seed(random_seed)\n","    \n","    # Создаем случайные веса\n","    w = np.random.uniform(size=2)\n","\n","    # Сохраняем историю изменения весов\n","    weights_history = []\n","\n","    # Количество примеров в выборке \n","    num_samples = features.shape[0]\n","    \n","    # Начало оптимизации\n","    for epoch in range(num_epoch):\n","        \n","        # Перемешиваем данные до того как разделить на батчи\n","        idx = list(range(num_samples))\n","        idx_shuffled = np.random.permutation(idx)\n","\n","        # Итерируемся по батчам\n","        for batch_idx in np.array_split(idx_shuffled, batch_size):\n","            \n","            # Сохраняем веса для истории\n","            weights_history.append(w)\n","            \n","            # Получаем батчи из общей выборки\n","            x_batch = features[batch_idx] \n","            y_batch = output_true[batch_idx]\n","            \n","            # Определяем предсказания для батча\n","            y_batch_pred = forward_pass(x_batch, w)\n","            \n","            # Определяем потери и обновляем веса\n","            w = backward_pass(x_batch, y_batch, w, y_batch_pred, learning_rate)\n","    return weights_history"],"metadata":{"id":"i9b0C9vOLnUt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Определяем гиперпараметры\n","learning_rate = 0.2\n","num_epoch = 10\n","batch_size = 16\n","\n","# Начинаем обучение\n","weights_history_bgd = fit_linear_model_bgd(x, y, num_epoch, \n","                                           learning_rate, batch_size)"],"metadata":{"id":"7jkZnlRcOeh2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Сравним процесс обучения с обычным градиентным спуском и градиентным спуском на батчах."],"metadata":{"id":"GbknteQuOzOi"}},{"cell_type":"code","source":["fig, ax = plt.subplots(figsize=(8, 8))\n","ax.set(xlabel='w0', ylabel='w1',            \n","       title='Сравнение градиентного спуска с градиентным спуском на батчах')\n","\n","# История градиентного спуска с батчами\n","w_bgd = np.array(weights_history_bgd)\n","ax.scatter(w_bgd[:, 0], w_bgd[:, 1])\n","\n","# История обычного градиентного спуска\n","w_gd = np.array(weights_history)\n","ax.scatter(w_gd[:, 0], w_gd[:, 1])\n","\n","# Правильные значения\n","w_gd = np.array(weights_history)\n","ax.scatter(4, 5)\n","\n","# Легенда\n","plt.legend(labels=['Batch gradient descent', \n","                   'Gradient descent', \n","                   'True weights']);"],"metadata":{"id":"wOWBdAriOxAm","colab":{"base_uri":"https://localhost:8080/","height":513},"executionInfo":{"status":"ok","timestamp":1663315283696,"user_tz":-420,"elapsed":727,"user":{"displayName":"Mikhail Chernobrov","userId":"00656209317254757514"}},"outputId":"4dca0860-2a03-4f3f-e677-94e4f3a6b58d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x576 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Шаги стохастического градиентного спуска заметно более шумные, но считать их получается значительно быстрее. В итоге они тоже сходятся к оптимальному значению.\n","\n","Теперь всю выборку не надо держать в памяти, а достаточно загружать лишь текущий батч (а остальная выборка может лежать на диске, что удобно, так как в реальности задачи, в которых выборка целиком не влезает в оперативную память, встречаются очень часто).\n","\n","В случае, когда размер батча равен 1, градиентный спуск называется стохастическим, и он еще более шумный. Таким образом:\n","- градиентный спуск (определяем градиент по всей выборке, чтобы один раз обновить веса)\n","- стохастический градиентный спуск (определяем градиент для одного примера, обновляем веса и переходим к следующему примеру)\n","- градиентный спуск с батчами (определяем градиент для нескольких примеров — батча, обновляем веса, переходим к следующему батчу)"],"metadata":{"id":"qmwYJNHHPN4l"}}]}